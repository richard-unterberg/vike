import{o as a,a as n}from"../chunks/chunk-D7W6cz9L.js";import{j as e}from"../chunks/chunk-CDJGqYdM.js";import{L as l}from"../chunks/chunk-B92MPKY5.js";/* empty css                      */import{W as d}from"../chunks/chunk-vvmahyUt.js";/* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      */import{u as i}from"../chunks/chunk-CqCXRXff.js";/* empty css                      *//* empty css                      */const s=[];function r(o){const t={blockquote:"blockquote",code:"code",p:"p",...i(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsxs(d,{children:[e.jsx(t.code,{children:"dist/server/importBuild.js"})," is outdated and not needed anymore."]}),`
`,e.jsxs(t.blockquote,{children:[`
`,e.jsxs(t.p,{children:["There are still some (rare) situations when we need to manually import the ",e.jsx(t.code,{children:"dist/server/"})," files, see ",e.jsx(l,{href:"/importBuild.cjs"}),"."]}),`
`]})]})}function p(o={}){const{wrapper:t}={...i(),...o.components};return t?e.jsx(t,{...o,children:e.jsx(r,{...o})}):r(o)}const u=Object.freeze(Object.defineProperty({__proto__:null,default:p,pageSectionsExport:s},Symbol.toStringTag,{value:"Module"})),b={hasServerOnlyHook:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:!1}},isClientRuntimeLoaded:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:!0}},onBeforeRenderEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},dataEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},onRenderClient:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/renderer/onRenderClient",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:n}},onCreatePageContext:{type:"cumulative",definedAtData:[{filePathToShowToUser:"@brillout/docpress/renderer/onCreatePageContext",fileExportPathToShowToUser:[]}],valueSerialized:[{type:"pointer-import",value:a}]},Page:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/importBuild-dot-js/+Page.mdx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:u}},hydrationCanBeAborted:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/config",fileExportPathToShowToUser:["default","hydrationCanBeAborted"]},valueSerialized:{type:"js-serialized",value:!0}}};export{b as configValuesSerialized};
